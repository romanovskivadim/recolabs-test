{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Professional\\\\Documents\\\\working\\\\web\\\\recolabs-test\\\\src\\\\components\\\\common\\\\accordion\\\\view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport icon from \"@/assets/images/accordion-icon.svg\";\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Accordion(_ref) {\n  _s();\n\n  let {\n    title,\n    children\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const container = useRef(null);\n  const titleContainer = useRef(null);\n  useEffect(() => {\n    function handler(e) {\n      if (isOpen && container.current && titleContainer.current && !titleContainer.current.contains(e.target) && !container.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handler);\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion_title-container\",\n      onClick: () => setIsOpen(!isOpen),\n      ref: titleContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion_img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: \">\",\n          className: `accordion_img ${isOpen ? 'accordion_img-open' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion_title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `accordion_container ${isOpen ? 'accordion_open' : ''}`,\n      ref: container,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accordion, \"H7Z5OJ09T63cKb1iHCPmCkmfXhk=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["C:/Users/Professional/Documents/working/web/recolabs-test/src/components/common/accordion/view.tsx"],"names":["React","useEffect","useRef","useState","Accordion","title","children","isOpen","setIsOpen","container","titleContainer","handler","e","current","contains","target","document","addEventListener","removeEventListener","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyCC,SAAzC,EAAoDC,MAApD,EAA4DC,QAA5D,QAA4E,OAA5E;;AAEA,OAAO,eAAP;;;AAOA,SAASC,SAAT,OAA8D;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA2C;AAE5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMM,SAAS,GAAGP,MAAM,CAAiB,IAAjB,CAAxB;AACA,QAAMQ,cAAc,GAAGR,MAAM,CAAiB,IAAjB,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASU,OAAT,CAAoCC,CAApC,EAAoD;AAClD,UACEL,MAAM,IACNE,SAAS,CAACI,OADV,IAEAH,cAAc,CAACG,OAFf,IAGA,CAACH,cAAc,CAACG,OAAf,CAAuBC,QAAvB,CAAgCF,CAAC,CAACG,MAAlC,CAHD,IAIA,CAACN,SAAS,CAACI,OAAV,CAAkBC,QAAlB,CAA2BF,CAAC,CAACG,MAA7B,CALH,EAME;AACAP,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF;;AAEDQ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,OAAvC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,OAA1C;AACD,KAFD;AAGD,GAlBQ,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,OAAO,EAAE,MAAMH,SAAS,CAAC,CAACD,MAAF,CAAnE;AAA8E,MAAA,GAAG,EAAEG,cAAnF;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAES,IAAV;AAAgB,UAAA,GAAG,EAAC,GAApB;AAAwB,UAAA,SAAS,EAAG,iBAAgBZ,MAAM,GAAG,oBAAH,GAA0B,EAAG;AAAvF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAkCF;AAAlC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAG,uBAAsBE,MAAM,GAAG,gBAAH,GAAsB,EAAG,EAAtE;AAAyE,MAAA,GAAG,EAAEE,SAA9E;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxCQF,S;;KAAAA,S;AA0CT,eAAeA,SAAf","sourcesContent":["import React, { ReactElement, ReactNode, useEffect, useRef, useState } from 'react';\r\nimport icon from '@/assets/images/accordion-icon.svg';\r\nimport './styles.scss';\r\n\r\ninterface IProps {\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nfunction Accordion({ title, children }: IProps): ReactElement {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const titleContainer = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    function handler(this: HTMLElement, e: Event): void {\r\n      if (\r\n        isOpen &&\r\n        container.current &&\r\n        titleContainer.current &&\r\n        !titleContainer.current.contains(e.target as HTMLDivElement) &&\r\n        !container.current.contains(e.target as HTMLDivElement)\r\n      ) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener('mousedown', handler);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handler);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='accordion'>\r\n      <div className='accordion_title-container' onClick={() => setIsOpen(!isOpen)} ref={titleContainer}>\r\n        <div className='accordion_img-container'>\r\n          <img src={icon} alt='>' className={`accordion_img ${isOpen ? 'accordion_img-open' : ''}`} />\r\n        </div>\r\n        <div className='accordion_title'>{title}</div>\r\n      </div>\r\n      <div className={`accordion_container ${isOpen ? 'accordion_open' : ''}`} ref={container}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n"]},"metadata":{},"sourceType":"module"}