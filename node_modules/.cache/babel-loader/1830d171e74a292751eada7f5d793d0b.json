{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Professional\\\\Documents\\\\working\\\\web\\\\recolabs-test\\\\src\\\\components\\\\common\\\\nav-link\\\\view.tsx\";\nimport React from 'react';\nimport { Link } from '@reach/router';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavLink(props) {\n  const {\n    shouldUseActiveStyles = true,\n    activeClassName,\n    ...restProps\n  } = props;\n\n  const getProps = linkGetProps => !shouldUseActiveStyles || !linkGetProps.isCurrent ? {} : {\n    className: classNames(props.className, activeClassName)\n  };\n\n  return /*#__PURE__*/_jsxDEV(Link, { ...restProps,\n    getProps: getProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = NavLink;\nexport default NavLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavLink\");","map":{"version":3,"sources":["C:/Users/Professional/Documents/working/web/recolabs-test/src/components/common/nav-link/view.tsx"],"names":["React","Link","classNames","NavLink","props","shouldUseActiveStyles","activeClassName","restProps","getProps","linkGetProps","isCurrent","className"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,IAAT,QAA8C,eAA9C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAOA,SAASC,OAAT,CAAiBC,KAAjB,EAA8C;AAC5C,QAAM;AAAEC,IAAAA,qBAAqB,GAAG,IAA1B;AAAgCC,IAAAA,eAAhC;AAAiD,OAAGC;AAApD,MAAkEH,KAAxE;;AAEA,QAAMI,QAAQ,GAAIC,YAAD,IACf,CAACJ,qBAAD,IAA0B,CAACI,YAAY,CAACC,SAAxC,GACI,EADJ,GAEI;AAAEC,IAAAA,SAAS,EAAET,UAAU,CAACE,KAAK,CAACO,SAAP,EAAkBL,eAAlB;AAAvB,GAHN;;AAMA,sBACE,QAAC,IAAD,OACMC,SADN;AAEE,IAAA,QAAQ,EAAEC;AAFZ;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAfQL,O;AAiBT,eAAeA,OAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport { Link, LinkProps, LinkGetProps } from '@reach/router';\nimport classNames from 'classnames';\n\ninterface IProps extends React.PropsWithoutRef<LinkProps<Record<string, unknown>>>, React.RefAttributes<HTMLAnchorElement> {\n  shouldUseActiveStyles?: boolean;\n  activeClassName?: string;\n}\n\nfunction NavLink(props: IProps): ReactElement {\n  const { shouldUseActiveStyles = true, activeClassName, ...restProps } = props;\n\n  const getProps = (linkGetProps: LinkGetProps) => (\n    !shouldUseActiveStyles || !linkGetProps.isCurrent\n      ? {}\n      : { className: classNames(props.className, activeClassName) }\n  );\n\n  return (\n    <Link\n      {...restProps}\n      getProps={getProps}\n    />\n  );\n}\n\nexport default NavLink;\n"]},"metadata":{},"sourceType":"module"}