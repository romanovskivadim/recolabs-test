{"ast":null,"code":"import axios from 'axios';\nexport let AvailableOrigins;\n\n(function (AvailableOrigins) {\n  AvailableOrigins[\"DevelopmentBackendURL\"] = \"http://localhost:8080\";\n  AvailableOrigins[\"ProductionBackendURL\"] = \"\";\n})(AvailableOrigins || (AvailableOrigins = {}));\n\nclass Api {\n  constructor() {\n    this.createApiEngine = () => {\n      const apiEngine = axios.create({\n        baseURL: AvailableOrigins.DevelopmentBackendURL\n      });\n      return {\n        get: apiEngine.get,\n        post: apiEngine.post,\n        delete: apiEngine.delete,\n        put: apiEngine.put\n      };\n    };\n\n    this.apiEngine = this.createApiEngine();\n\n    this.get = (url, config) => {\n      return this.apiEngine.get(url, { ...config,\n        ...this.getHeaders(config === null || config === void 0 ? void 0 : config.headers)\n      });\n    };\n\n    this.post = (url, data, config) => {\n      return this.apiEngine.post(url, data, { ...config,\n        ...this.getHeaders(config === null || config === void 0 ? void 0 : config.headers)\n      });\n    };\n\n    this.put = (url, data, config) => {\n      return this.apiEngine.put(url, data, { ...config,\n        ...this.getHeaders(config === null || config === void 0 ? void 0 : config.headers)\n      });\n    };\n\n    this.delete = (url, config) => {\n      return this.apiEngine.delete(url, { ...config,\n        ...this.getHeaders(config === null || config === void 0 ? void 0 : config.headers)\n      });\n    };\n\n    this.getHeaders = function () {\n      let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': '4567890',\n          ...headers\n        }\n      };\n    };\n  }\n\n}\n\nexport const isRequestError = error => {\n  return axios.isAxiosError(error);\n};\nexport const getCancelTokenSource = () => {\n  return axios.CancelToken.source();\n};\nexport const isRequestCancelled = error => {\n  return axios.isCancel(error);\n};\nexport default new Api();","map":{"version":3,"sources":["C:/Users/Professional/Documents/working/web/recolabs-test/src/services/api/index.ts"],"names":["axios","AvailableOrigins","Api","createApiEngine","apiEngine","create","baseURL","DevelopmentBackendURL","get","post","delete","put","url","config","getHeaders","headers","data","isRequestError","error","isAxiosError","getCancelTokenSource","CancelToken","source","isRequestCancelled","isCancel"],"mappings":"AAAA,OAAOA,KAAP,MAAwF,OAAxF;AAEA,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,KAAAA,gB;;AAKZ,MAAMC,GAAN,CAAU;AAAA;AAAA,SACAC,eADA,GACkB,MAAM;AAC9B,YAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC7BC,QAAAA,OAAO,EAAEL,gBAAgB,CAACM;AADG,OAAb,CAAlB;AAIA,aAAO;AACLC,QAAAA,GAAG,EAAEJ,SAAS,CAACI,GADV;AAELC,QAAAA,IAAI,EAAEL,SAAS,CAACK,IAFX;AAGLC,QAAAA,MAAM,EAAEN,SAAS,CAACM,MAHb;AAILC,QAAAA,GAAG,EAAEP,SAAS,CAACO;AAJV,OAAP;AAMD,KAZO;;AAAA,SAcAP,SAdA,GAcY,KAAKD,eAAL,EAdZ;;AAAA,SAgBDK,GAhBC,GAgBK,CAAII,GAAJ,EAAiBC,MAAjB,KAA4E;AACvF,aAAO,KAAKT,SAAL,CAAeI,GAAf,CAAsBI,GAAtB,EAA2B,EAAE,GAAGC,MAAL;AAAa,WAAG,KAAKC,UAAL,CAAgBD,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEE,OAAxB;AAAhB,OAA3B,CAAP;AACD,KAlBO;;AAAA,SAoBDN,IApBC,GAoBM,CAAIG,GAAJ,EAAiBI,IAAjB,EAAiCH,MAAjC,KAA4F;AACxG,aAAO,KAAKT,SAAL,CAAeK,IAAf,CAAuBG,GAAvB,EAA4BI,IAA5B,EAAkC,EAAE,GAAGH,MAAL;AAAa,WAAG,KAAKC,UAAL,CAAgBD,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEE,OAAxB;AAAhB,OAAlC,CAAP;AACD,KAtBO;;AAAA,SAwBDJ,GAxBC,GAwBK,CAAIC,GAAJ,EAAiBI,IAAjB,EAAiCH,MAAjC,KAA4F;AACvG,aAAO,KAAKT,SAAL,CAAeO,GAAf,CAAsBC,GAAtB,EAA2BI,IAA3B,EAAiC,EAAE,GAAGH,MAAL;AAAa,WAAG,KAAKC,UAAL,CAAgBD,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEE,OAAxB;AAAhB,OAAjC,CAAP;AACD,KA1BO;;AAAA,SA4BDL,MA5BC,GA4BQ,CAAIE,GAAJ,EAAiBC,MAAjB,KAA4E;AAC1F,aAAO,KAAKT,SAAL,CAAeM,MAAf,CAAyBE,GAAzB,EAA8B,EAAE,GAAGC,MAAL;AAAa,WAAG,KAAKC,UAAL,CAAgBD,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEE,OAAxB;AAAhB,OAA9B,CAAP;AACD,KA9BO;;AAAA,SAgCAD,UAhCA,GAgCa,YAA2C;AAAA,UAA1CC,OAA0C,uEAAP,EAAO;AAC9D,aAAO;AACLA,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiB,SAFV;AAGP,aAAGA;AAHI;AADJ,OAAP;AAOD,KAxCO;AAAA;;AAAA;;AA2CV,OAAO,MAAME,cAAc,GAAIC,KAAD,IAAyC;AACrE,SAAOlB,KAAK,CAACmB,YAAN,CAAmBD,KAAnB,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,oBAAoB,GAAG,MAAyB;AAC3D,SAAOpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAIL,KAAD,IAA6B;AAC7D,SAAOlB,KAAK,CAACwB,QAAN,CAAeN,KAAf,CAAP;AACD,CAFM;AAKP,eAAe,IAAIhB,GAAJ,EAAf","sourcesContent":["import axios, { AxiosError, AxiosRequestConfig, AxiosResponse, CancelTokenSource } from 'axios';\n\nexport enum AvailableOrigins {\n  DevelopmentBackendURL = 'http://localhost:8080',\n  ProductionBackendURL = '',\n}\n\nclass Api {\n  private createApiEngine = () => {\n    const apiEngine = axios.create({\n      baseURL: AvailableOrigins.DevelopmentBackendURL,\n    });\n\n    return {\n      get: apiEngine.get,\n      post: apiEngine.post,\n      delete: apiEngine.delete,\n      put: apiEngine.put,\n    };\n  };\n\n  private apiEngine = this.createApiEngine();\n\n  public get = <T>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> => {\n    return this.apiEngine.get<T>(url, { ...config, ...this.getHeaders(config?.headers) });\n  };\n\n  public post = <T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> => {\n    return this.apiEngine.post<T>(url, data, { ...config, ...this.getHeaders(config?.headers) });\n  };\n\n  public put = <T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> => {\n    return this.apiEngine.put<T>(url, data, { ...config, ...this.getHeaders(config?.headers) });\n  };\n\n  public delete = <T>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>> => {\n    return this.apiEngine.delete<T>(url, { ...config, ...this.getHeaders(config?.headers) });\n  };\n\n  private getHeaders = (headers: Record<string, unknown> = {}) => {\n    return {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': '4567890',\n        ...headers,\n      },\n    };\n  };\n}\n\nexport const isRequestError = (error: unknown): error is AxiosError => {\n  return axios.isAxiosError(error);\n};\n\nexport const getCancelTokenSource = (): CancelTokenSource => {\n  return axios.CancelToken.source();\n};\n\nexport const isRequestCancelled = (error: unknown): boolean => {\n  return axios.isCancel(error);\n};\n\nexport type { CancelToken } from 'axios';\nexport default new Api();\n"]},"metadata":{},"sourceType":"module"}