{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Professional\\\\Documents\\\\working\\\\web\\\\recolabs-test\\\\src\\\\components\\\\pages\\\\processes\\\\view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport api from '@/services/api';\nimport { Button, Card, GridArea, Head, PageHeader, StandartTitle } from '@/components/common';\nimport { ProcessesSidebar } from './components';\nimport processesLogo from \"@/assets/images/processes-black.svg\";\nimport { API, FORM_ERROR_MESSAGES } from '@/consts';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required(FORM_ERROR_MESSAGES.REQUIRED),\n  teams: Yup.string().test('oneOfRequired', `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`, function () {\n    return this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms;\n  }),\n  domains: Yup.string().test('oneOfRequired', `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`, function () {\n    return this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms;\n  }),\n  users: Yup.string().test('oneOfRequired', `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`, function () {\n    return this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms;\n  }),\n  relatedTerms: Yup.string().test('oneOfRequired', `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`, function () {\n    return this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms;\n  }),\n  description: Yup.string()\n});\n\nfunction Processes(props) {\n  _s();\n\n  const [processesData, setProcessesData] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const openCloseSidebar = useCallback(value => {\n    setIsOpen(value);\n  }, [isOpen]);\n\n  const getData = async () => {\n    try {\n      const result = await api.get(API.PROCESSES.GET_METADATA);\n      setProcessesData(result.data.mds);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      title: \"Home Page\",\n      description: \"General content about the site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isOpen && /*#__PURE__*/_jsxDEV(ProcessesSidebar, {\n        getData: getData,\n        handleClose: () => openCloseSidebar(!isOpen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Process Library\",\n        icon: processesLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"processes-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processes-page_content-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processes-page_title-container\",\n            children: /*#__PURE__*/_jsxDEV(StandartTitle, {\n              text: \"My processes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processes-page_top\",\n            children: /*#__PURE__*/_jsxDEV(GridArea, {\n              rows: Math.ceil(processesData.length / 3),\n              columns: 3,\n              children: processesData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  title: item === null || item === void 0 ? void 0 : item.name,\n                  text: item === null || item === void 0 ? void 0 : item.description,\n                  icon: item === null || item === void 0 ? void 0 : item.iconUrl\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, `${new Date().getMilliseconds()}${Math.random()}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processes-page_right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"processes-page_right-btn\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Create new\",\n              handleClick: () => openCloseSidebar(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Processes, \"gmAQlGzDiBHPhmTqxtw0cLjQNYk=\");\n\n_c = Processes;\nexport default Processes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Processes\");","map":{"version":3,"sources":["C:/Users/Professional/Documents/working/web/recolabs-test/src/components/pages/processes/view.tsx"],"names":["React","useCallback","useEffect","useState","Yup","api","Button","Card","GridArea","Head","PageHeader","StandartTitle","ProcessesSidebar","API","FORM_ERROR_MESSAGES","validationSchema","object","shape","name","string","required","REQUIRED","teams","test","ONE_OF_REQUIRED","parent","domains","users","relatedTerms","description","Processes","props","processesData","setProcessesData","isOpen","setIsOpen","openCloseSidebar","value","getData","result","get","PROCESSES","GET_METADATA","data","mds","e","console","error","processesLogo","Math","ceil","length","map","item","iconUrl","Date","getMilliseconds","random"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport * as Yup from 'yup';\r\nimport api from '@/services/api';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  GridArea,\r\n  Head,\r\n  PageHeader,\r\n  StandartTitle,\r\n} from '@/components/common';\r\nimport { ProcessesSidebar } from './components';\r\nimport processesLogo from '@/assets/images/processes-black.svg';\r\nimport { API, FORM_ERROR_MESSAGES } from '@/consts';\r\nimport { IMDSProcesses } from '@/models';\r\nimport './styles.scss';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(FORM_ERROR_MESSAGES.REQUIRED),\r\n  teams: Yup.string().test(\r\n    'oneOfRequired',\r\n    `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`,\r\n    function () {\r\n      return (this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms)\r\n    }\r\n  ),\r\n  domains: Yup.string().test(\r\n    'oneOfRequired',\r\n    `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`,\r\n    function () {\r\n      return (this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms)\r\n    }\r\n  ),\r\n  users: Yup.string().test(\r\n    'oneOfRequired',\r\n    `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`,\r\n    function () {\r\n      return (this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms)\r\n    }\r\n  ),\r\n  relatedTerms: Yup.string().test(\r\n    'oneOfRequired',\r\n    `${FORM_ERROR_MESSAGES.ONE_OF_REQUIRED}`,\r\n    function () {\r\n      return (this.parent.teams || this.parent.domains || this.parent.users || this.parent.relatedTerms)\r\n    }\r\n  ),\r\n  description: Yup.string(),\r\n});\r\n\r\nfunction Processes(props: RouteComponentProps): ReactElement {\r\n\r\n  const [processesData, setProcessesData] = useState<IMDSProcesses[]>([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const openCloseSidebar = useCallback((value: boolean) => {\r\n    setIsOpen(value);\r\n  }, [isOpen]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const result = await api.get<{ mds: IMDSProcesses[] }>(API.PROCESSES.GET_METADATA);\r\n      setProcessesData(result.data.mds);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head\r\n        title='Home Page'\r\n        description='General content about the site'\r\n      />\r\n      <main>\r\n        {isOpen && (\r\n          <ProcessesSidebar getData={getData} handleClose={() => openCloseSidebar(!isOpen)} />\r\n        )}\r\n        <PageHeader title='Process Library' icon={processesLogo} />\r\n        <section className='processes-page'>\r\n          <div className='processes-page_content-container'>\r\n            <div className='processes-page_title-container'>\r\n              <StandartTitle text='My processes' />\r\n            </div>\r\n            <div className='processes-page_top'>\r\n              <GridArea rows={Math.ceil(processesData.length / 3)} columns={3}>\r\n                {processesData.map((item) => (\r\n                  <div key={`${new Date().getMilliseconds()}${Math.random()}`}>\r\n                    <Card title={item?.name} text={item?.description} icon={item?.iconUrl} />\r\n                  </div>\r\n                ))}\r\n              </GridArea>\r\n            </div>\r\n          </div>\r\n          <div className='processes-page_right'>\r\n            <div className='processes-page_right-btn'>\r\n              <Button text='Create new' handleClick={() => openCloseSidebar(true)} />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Processes;\r\n"]},"metadata":{},"sourceType":"module"}